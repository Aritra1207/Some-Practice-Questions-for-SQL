-- Create the Students table
CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    grade_level INT
);

-- Create the Courses table
CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(50),
    credits INT
);

-- Create the Enrollments table
CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    grade DECIMAL(3, 2),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- Insert sample data into Students
INSERT INTO Students (student_id, name, age, grade_level) VALUES
(1, 'Alice', 20, 3),
(2, 'Bob', 21, 4),
(3, 'Charlie', 19, 3),
(4, 'Diana', 22, 4),
(5, 'Ethan', 20, 3);

-- Insert sample data into Courses
INSERT INTO Courses (course_id, course_name, credits) VALUES
(1, 'Math', 3),
(2, 'Science', 4),
(3, 'History', 3),
(4, 'Art', 2);

-- Insert sample data into Enrollments
INSERT INTO Enrollments (enrollment_id, student_id, course_id, grade) VALUES
(1, 1, 1, 3.5),
(2, 1, 2, 4.0),
(3, 2, 1, 2.5),
(4, 2, 3, 3.0),
(5, 3, 2, 3.0),
(6, 3, 4, 2.0),
(7, 4, 1, 3.5),
(8, 4, 3, 4.0),
(9, 5, 2, 3.0),
(10, 5, 4, 3.5);


-------------------------------------------------------------------------------
--Q1. Write a query to find the average grade of all students across all courses.
SELECT AVG(grade) AS average_grade
FROM Enrollments;
--------------------------------------------------------------------------------
--Q2. Write a query to list the names of students along with the courses they are enrolled in. Include the course name in your result.
SELECT Students.name AS student_name, Courses.course_name
FROM Enrollments
JOIN Students ON Enrollments.student_id = Students.student_id
JOIN Courses ON Enrollments.course_id = Courses.course_id;
-----------------------------------------------------------------------------
--Q3. Write a query to count the number of students in each grade level. 
SELECT grade_level, COUNT(student_id) AS student_count
FROM Students
GROUP BY grade_level;
------------------------------------------------------------------------------
--Q4.Write a query to find the maximum grade achieved in each course. 
SELECT Courses.course_name, MAX(Enrollments.grade) AS max_grade
FROM Enrollments
JOIN Courses ON Enrollments.course_id = Courses.course_id
GROUP BY Courses.course_name;
------------------------------------------------------------------------------
--Q5. Write a query to find the average grade of students who are in grade level 3.
SELECT AVG(Enrollments.grade) AS average_grade
FROM Enrollments
JOIN Students ON Enrollments.student_id = Students.student_id
WHERE Students.grade_level = 3;
-------------------------------------------------------------------------------
--Q6. Write a query to get a list of students, their enrolled courses, and the credit hours for each course
SELECT Students.name AS student_name, Courses.course_name, Courses.credits
FROM Enrollments
JOIN Students ON Enrollments.student_id = Students.student_id
JOIN Courses ON Enrollments.course_id = Courses.course_id;
---------------------------------------------------------------------------------
--Q7. Write a query to find all courses that have an average grade greater than 3.0.
SELECT Courses.course_name, AVG(Enrollments.grade) AS average_grade
FROM Enrollments
JOIN Courses ON Enrollments.course_id = Courses.course_id
GROUP BY Courses.course_name
HAVING AVG(Enrollments.grade) > 3.0;
-------------------------------------------------------------------------------------
--Q8. Write a query to find students who have not received a grade of 4.0 in any course.
SELECT name
FROM Students
WHERE NOT EXISTS (
    SELECT 1
    FROM Enrollments
    WHERE Enrollments.student_id = Students.student_id
    AND Enrollments.grade = 4.0
);
--------------------------------------------------------------------------------------
--Q9. Write a query to find the names of students whose average grade is greater than the average grade of all students.
SELECT Students.name
FROM Students
JOIN Enrollments ON Students.student_id = Enrollments.student_id
GROUP BY Students.name
HAVING AVG(Enrollments.grade) > (SELECT AVG(grade) FROM Enrollments);
----------------------------------------------------------------------------------
--Q10. Write a query to display each student's name, the total number of courses they are enrolled in, and their average grade.
SELECT Students.name AS student_name, 
       COUNT(Enrollments.course_id) AS total_courses, 
       AVG(Enrollments.grade) AS average_grade
FROM Students
JOIN Enrollments ON Students.student_id = Enrollments.student_id
GROUP BY Students.name;
